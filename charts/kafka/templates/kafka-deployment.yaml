apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-kafka
  annotations:
    "helm.sh/hook-weight": "-10"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: {{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}
          ports:
            - containerPort: {{ .Values.kafka.service.internal.port }}
            - containerPort: {{ .Values.kafka.service.external.port }}
          env:
            - name: KAFKA_BROKER_ID
              value: {{ .Values.kafka.config.brokerId | quote }}
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "{{ .Release.Name }}-zookeeper:{{ .Values.zookeeper.service.port }}"
            - name: KAFKA_LISTENERS
              value: "INTERNAL://0.0.0.0:{{ .Values.kafka.service.internal.port }},EXTERNAL://0.0.0.0:{{ .Values.kafka.service.external.port }}"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INTERNAL://{{ .Release.Name }}-kafka:{{ .Values.kafka.service.internal.port }},EXTERNAL://localhost:{{ .Values.kafka.service.external.port }}"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: {{ .Values.kafka.config.autoCreateTopics | quote }}
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: {{ .Values.kafka.config.offsetsTopicReplicationFactor | quote }}