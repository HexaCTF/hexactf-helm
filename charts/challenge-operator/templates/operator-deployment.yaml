apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-operator
  annotations:
    "helm.sh/hook-weight": "0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: challenge-operator
  template:
    metadata:
      labels:
        app: challenge-operator
    spec:
      nodeSelector:
        hexactf/env: mgmt
      serviceAccountName: {{ .Release.Name }}-operator
      containers:
        - name: operator
          image: {{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag }}
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          ports:
            - containerPort: 8080
          env:
            - name: DEVELOPMENT
              value: {{ .Values.operator.config.development | quote }}
            - name: METRICS_ADDR
              value: {{ .Values.operator.config.metricsAddr }}
            - name: KAFKA_BROKERS
              value: "{{ .Release.Name }}-kafka:{{ .Values.kafka.service.internal.port }}"
            - name: LOG_LEVEL
              value: {{ .Values.operator.config.logLevel }}
            - name: KUBECONFIG
              value: {{ .Values.operator.kubeconfig.mountPath }}/config
          {{- if .Values.operator.kubeconfig.enabled }}
          volumeMounts:
            - name: kubeconfig
              mountPath: {{ .Values.operator.kubeconfig.mountPath }}
              readOnly: true
      volumes:
        - name: kubeconfig
          hostPath:
            path: /tmp/k/config
          {{- end }}
