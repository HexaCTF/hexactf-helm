apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-mariadb
  annotations:
    "helm.sh/hook-weight": "-20"
spec:
  serviceName: {{ .Release.Name }}-mariadb
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      nodeSelector:
        hexactf/env: mgmt
      volumes:
        - name: mariadb-config
          configMap:
            name: mariadb-config  # 💡 위에서 생성한 ConfigMap 사용

      containers:
        - name: mariadb
          image: {{ .Values.mariadb.image.repository }}:{{ .Values.mariadb.image.tag }}
          ports:
            - containerPort: {{ .Values.mariadb.service.port }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.mariadb.auth.rootPassword }}
            - name: MYSQL_DATABASE
              value: {{ .Values.mariadb.auth.database }}
            - name: MYSQL_USER
              value: {{ .Values.mariadb.auth.username }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.mariadb.auth.password }}
          args:
            - --defaults-extra-file=/etc/mysql/my.cnf  # 💡 ConfigMap을 직접 사용
          volumeMounts:
            - name: mariadb-config
              mountPath: /etc/mysql/my.cnf
              subPath: my.cnf  # 💡 ConfigMap의 `my.cnf` 키를 MariaDB 설정으로 사용
            - name: mariadb-data
              mountPath: /var/lib/mysql

        - name: mysqld-exporter
          image: prom/mysqld-exporter:latest
          ports:
            - containerPort: 9104
          env:
            - name: DATA_SOURCE_NAME
              valueFrom:
                secretKeyRef:
                  name: mariadb-secret
                  key: username
            - name: DATA_SOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-secret
                  key: password

  volumeClaimTemplates:
    - metadata:
        name: mariadb-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: nfs-client
        resources:
          requests:
            storage: 10Gi
