apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-app
  annotations:
    "helm.sh/hook-weight": "10"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: challenge-app
  template:
    metadata:
      labels:
        app: challenge-app
    spec:
      nodeSelector:
        hexactf/env: mgmt
      containers:
        - name: app
          image: {{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.app.service.port }}
          reources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          env:
            - name: FLASK_ENV
              value: {{ .Values.app.config.flaskEnv }}
            - name: DB_HOST
              value: "{{ .Release.Name }}-mariadb"
            - name: DB_PORT
              value: {{ .Values.mariadb.service.port | quote }}
            - name: DB_NAME
              value: {{ .Values.mariadb.auth.database }}
            - name: DB_USER
              value: {{ .Values.mariadb.auth.username }}
            - name: DB_PASSWORD
              value: {{ .Values.mariadb.auth.password }}
            - name: DB_POOL_SIZE
              value: {{ .Values.app.config.db.poolSize | quote }}
            - name: DB_MAX_OVERFLOW
              value: {{ .Values.app.config.db.maxOverflow | quote }}
            - name: SECRET_KEY
              value: {{ .Values.app.config.secretKey }}
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "{{ .Release.Name }}-kafka:{{ .Values.kafka.service.internal.port }}"
            - name: KAFKA_TOPIC
              value: {{ .Values.app.config.kafka.topic }}
            - name: KAFKA_GROUP_ID
              value: {{ .Values.app.config.kafka.groupId }}
            - name: KUBECONFIG
              value: {{ .Values.app.kubeconfig.mountPath }}
            {{- if .Values.app.config.loki.enabled }}
            - name: LOKI_PROTOCOL
              value: {{ .Values.app.config.loki.protocol }}
            - name: LOKI_HOST
              value: {{ .Values.app.config.loki.host }}
            - name: LOKI_PORT
              value: {{ .Values.app.config.loki.port | quote }}
            - name: LOKI_PATH
              value: {{ .Values.app.config.loki.path }}
            - name: LOKI_LOG_LEVEL
              value: {{ .Values.app.config.loki.logLevel }}
            - name: LOKI_APP_NAME
              value: {{ .Values.app.config.loki.app_name }}
            {{- end }}
          {{- if .Values.app.kubeconfig.enabled }}
          volumeMounts:
            - name: kubeconfig
              mountPath: {{ .Values.app.kubeconfig.mountPath }}
              readOnly: true
      volumes:
        - name: kubeconfig
          hostPath:
            path: /tmp/k
          {{- end }}